"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/about/page",{

/***/ "(app-pages-browser)/./hooks/useWebsiteContentSQLite.ts":
/*!******************************************!*\
  !*** ./hooks/useWebsiteContentSQLite.ts ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cacheManager: function() { return /* binding */ cacheManager; },\n/* harmony export */   useWebsiteContent: function() { return /* binding */ useWebsiteContent; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n// Simple cache for storing fetched content\nconst contentCache = new Map();\n// Request deduplication to prevent multiple simultaneous requests for the same content\nconst pendingRequests = new Map();\n// Cache duration: 1 hour (much more reasonable than Firebase)\nconst CACHE_DURATION = 60 * 60 * 1000 // 1 hour\n;\nfunction useWebsiteContent(section, subsection) {\n    const [content, setContent] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // Debug logging\n    console.log(\"\\uD83D\\uDD04 SQLite useWebsiteContent render:\", {\n        section,\n        subsection,\n        loading,\n        contentLength: content.length,\n        error\n    });\n    console.log(\"\\uD83D\\uDD04 Content state:\", content);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        async function fetchContent() {\n            try {\n                setLoading(true);\n                console.log(\"\\uD83D\\uDE80 Starting fetch for section: \".concat(section, \", subsection: \").concat(subsection));\n                // Build API URL\n                let url = \"/api/sqlite-content?section=\".concat(encodeURIComponent(section));\n                if (subsection) {\n                    url += \"&subsection=\".concat(encodeURIComponent(subsection));\n                }\n                console.log(\"\\uD83D\\uDD0D Fetching from: \".concat(url));\n                const response = await fetch(url);\n                console.log(\"\\uD83D\\uDCE1 Response status: \".concat(response.status));\n                if (!response.ok) {\n                    throw new Error(\"HTTP error! status: \".concat(response.status));\n                }\n                const sectionContent = await response.json();\n                console.log(\"✅ Fetched content:\", sectionContent.length, \"items\");\n                setContent(sectionContent);\n                setError(null);\n                setLoading(false);\n                console.log(\"✅ Content loaded successfully\");\n            } catch (err) {\n                console.error(\"❌ Error fetching content:\", err);\n                setError(err.message || \"Failed to fetch content\");\n                setLoading(false);\n            }\n        }\n        fetchContent();\n    }, [\n        section,\n        subsection\n    ]);\n    // Helper function to get content by metadata name\n    const getContentByMetadataName = (name)=>{\n        const item = content.find((item)=>{\n            var _item_metadata;\n            return ((_item_metadata = item.metadata) === null || _item_metadata === void 0 ? void 0 : _item_metadata.name) === name;\n        });\n        return (item === null || item === void 0 ? void 0 : item.content) || \"\";\n    };\n    // Helper function to get content object by subsection\n    const getContent = (subsection)=>{\n        if (!subsection) {\n            return content[0] || null;\n        }\n        return content.find((item)=>item.subsection === subsection) || null;\n    };\n    // Helper function to get content value by subsection\n    const getContentValue = (subsection)=>{\n        const item = getContent(subsection);\n        return (item === null || item === void 0 ? void 0 : item.content) || \"\";\n    };\n    // Helper function to get metadata by subsection\n    const getMetadata = (subsection)=>{\n        const item = getContent(subsection);\n        return (item === null || item === void 0 ? void 0 : item.metadata) || {};\n    };\n    return {\n        content,\n        loading,\n        error,\n        getContent,\n        getContentValue,\n        getMetadata,\n        getContentByMetadataName\n    };\n}\n// Export cache management functions\nconst cacheManager = {\n    // Clear all cached content\n    clearAll: ()=>{\n        contentCache.clear();\n        console.log(\"\\uD83D\\uDDD1️ Cleared all content cache\");\n    },\n    // Clear cache for specific section\n    clearSection: (section)=>{\n        const keysToDelete = Array.from(contentCache.keys()).filter((key)=>key === section || key.startsWith(section + \"-\"));\n        keysToDelete.forEach((key)=>contentCache.delete(key));\n        console.log(\"\\uD83D\\uDDD1️ Cleared cache for \".concat(section));\n    },\n    // Get cache stats\n    getStats: ()=>{\n        const now = Date.now();\n        const stats = {\n            totalCached: contentCache.size,\n            expired: 0,\n            valid: 0\n        };\n        contentCache.forEach((value, key)=>{\n            if (now - value.timestamp > CACHE_DURATION) {\n                stats.expired++;\n            } else {\n                stats.valid++;\n            }\n        });\n        return stats;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useWebsiteContentSQLite.ts\n"));

/***/ })

});